{"ast":null,"code":"export default {\n  name: \"AboutSection\",\n  data() {\n    return {\n      features: [{\n        icon: \"fa-database\",\n        text: \"Unified Contact Repository\"\n      }, {\n        icon: \"fa-sitemap\",\n        text: \"Contact Organization\"\n      }, {\n        icon: \"fa-file-import\",\n        text: \"Contact Import/Export\"\n      }, {\n        icon: \"fa-sync-alt\",\n        text: \"Contact Sync\"\n      }, {\n        icon: \"fa-user-check\",\n        text: \"Contact Interaction Tracking\"\n      }, {\n        icon: \"fa-cog\",\n        text: \"Customizable Contact Fields\"\n      }, {\n        icon: \"fa-search\",\n        text: \"Search and Filter\"\n      }, {\n        icon: \"fa-share-alt\",\n        text: \"Contact Sharing\"\n      }, {\n        icon: \"fa-bell\",\n        text: \"Reminders and Notifications\"\n      }]\n    };\n  },\n  mounted() {\n    // Call the method to initialize Intersection Observer\n    this.observeListItems();\n  },\n  methods: {\n    observeListItems() {\n      const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.8 // When half of the element is visible\n      };\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add(\"animate\");\n            observer.unobserve(entry.target);\n          }\n        });\n      }, options);\n\n      // Observe each list item\n      document.querySelectorAll(\".animated-item\").forEach(item => {\n        observer.observe(item);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","features","icon","text","mounted","observeListItems","methods","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","document","querySelectorAll","item","observe"],"sources":["/home/natan/v/vue-crash/resto-project/src/components/AboutSection.vue"],"sourcesContent":["<template>\n  <!-- About Section -->\n  <section class=\"about-section about-section--about\">\n    <div class=\"container\">\n      <h2 class=\"about-heading\">Our features</h2>\n      <div class=\"about-content about-content--about\">\n        <div class=\"about-description about-description--about\">\n          <p class=\"about-paragraph\">\n            CONTACT_HUB is a comprehensive contact management platform designed\n            to streamline your contact-related tasks. With CONTACT_HUB, you can\n            efficiently organize, manage, and communicate with your contacts.\n          </p>\n          <p class=\"about-paragraph\">\n            Our platform offers a range of features to enhance your contact\n            management experience, including:\n          </p>\n        </div>\n        <ul class=\"about-list about-list--about\">\n          <!-- First Row -->\n          <li class=\"animated-item\" v-for=\"(feature, index) in features\" :key=\"index\">\n            <div :class=\"'list' + (index + 1)\"><i class=\"fas\" :class=\"feature.icon\"></i></div>\n            {{ feature.text }}\n          </li>\n        </ul>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: \"AboutSection\",\n  data() {\n    return {\n      features: [\n        { icon: \"fa-database\", text: \"Unified Contact Repository\" },\n        { icon: \"fa-sitemap\", text: \"Contact Organization\" },\n        { icon: \"fa-file-import\", text: \"Contact Import/Export\" },\n        { icon: \"fa-sync-alt\", text: \"Contact Sync\" },\n        { icon: \"fa-user-check\", text: \"Contact Interaction Tracking\" },\n        { icon: \"fa-cog\", text: \"Customizable Contact Fields\" },\n        { icon: \"fa-search\", text: \"Search and Filter\" },\n        { icon: \"fa-share-alt\", text: \"Contact Sharing\" },\n        { icon: \"fa-bell\", text: \"Reminders and Notifications\" }\n      ]\n    };\n  },\n  mounted() {\n    // Call the method to initialize Intersection Observer\n    this.observeListItems();\n  },\n  methods: {\n    observeListItems() {\n      const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.8 // When half of the element is visible\n      };\n\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add(\"animate\");\n            observer.unobserve(entry.target);\n          }\n        });\n      }, options);\n\n      // Observe each list item\n      document.querySelectorAll(\".animated-item\").forEach(item => {\n        observer.observe(item);\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Import Font Awesome styles */\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\");\n\n/* About section styles */\n.about-section--about {\n  background-color: #f9f9f9;\n  padding: 100px 0;\n}\n\n.about-section--about .container {\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.about-heading {\n  font-size: 2em;\n  margin-bottom: 15px;\n  color: #040d83;\n  text-align: center;\n}\n\n.about-content--about {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n}\n\n.about-description--about {\n  margin-bottom: 40px;\n}\n\n.about-paragraph {\n  font-size: 1.5em;\n  line-height: 1.6;\n  color: #918784;\n}\n\n.about-list--about {\n  list-style-type: none;\n  padding-left: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.about-list--about li {\n  position: relative;\n  padding-left: 60px;\n  margin-right: 130px; /* Add some spacing between items */\n  margin-bottom: 80px;\n  font-size: 1rem;\n  color:  #0f0f0f;\n}\n\n/* Initial state of animated items */\n.about-list--about li.animated-item {\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n/* Animation for items when they intersect with the viewport */\n.about-list--about li.animate {\n  opacity: 1;\n  transform: translateY(0);\n  transition: opacity 0.5s ease, transform 0.5s ease;\n}\n\n.list1,\n.list2,\n.list3,\n.list4,\n.list5,\n.list6,\n.list7,\n.list8,\n.list9 {\n  font-size: 40px;\n  color:  #040d83;\n}\n</style>\n"],"mappings":"AA8BA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,IAAI,EAAE,aAAa;QAAEC,IAAI,EAAE;MAA6B,CAAC,EAC3D;QAAED,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAuB,CAAC,EACpD;QAAED,IAAI,EAAE,gBAAgB;QAAEC,IAAI,EAAE;MAAwB,CAAC,EACzD;QAAED,IAAI,EAAE,aAAa;QAAEC,IAAI,EAAE;MAAe,CAAC,EAC7C;QAAED,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAA+B,CAAC,EAC/D;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAA8B,CAAC,EACvD;QAAED,IAAI,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAoB,CAAC,EAChD;QAAED,IAAI,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAkB,CAAC,EACjD;QAAED,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE;MAA8B;IAE3D,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACPD,gBAAgBA,CAAA,EAAG;MACjB,MAAME,OAAM,GAAI;QACdC,IAAI,EAAE,IAAI;QACVC,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,GAAE,CAAE;MACjB,CAAC;MAED,MAAMC,QAAO,GAAI,IAAIC,oBAAoB,CAACC,OAAM,IAAK;QACnDA,OAAO,CAACC,OAAO,CAACC,KAAI,IAAK;UACvB,IAAIA,KAAK,CAACC,cAAc,EAAE;YACxBD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;YACrCR,QAAQ,CAACS,SAAS,CAACL,KAAK,CAACE,MAAM,CAAC;UAClC;QACF,CAAC,CAAC;MACJ,CAAC,EAAEV,OAAO,CAAC;;MAEX;MACAc,QAAQ,CAACC,gBAAgB,CAAC,gBAAgB,CAAC,CAACR,OAAO,CAACS,IAAG,IAAK;QAC1DZ,QAAQ,CAACa,OAAO,CAACD,IAAI,CAAC;MACxB,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}